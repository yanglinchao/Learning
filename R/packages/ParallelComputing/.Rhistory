source("E://work//r-work//20170615-HuShen300StocksPre//function.R")
load("E:/work/r-work/stocksdata/HuShen300.RData")
X <- c("open", "high", "low", "close", "volume", "MACD_DIF", "MACD_DEA")
HS_pred <- c()
for(i in 1:length(HuShen300)){
mydata <- HuShen300[[i]]
date <- c()
price_pred <- c()
r_pred <- c()
for(j in 1:50){
mydata <- mydata[-c((nrow(mydata)-(50-j)):nrow(mydata)), ]
result <- FittingEverydayModel_new(mydata = mydata, Y = "high", X = X, alphaType = 1, day = 20, daystart = nrow(mydata)-1000)
date[j] <- as.character(mydata$Date[nrow(mydata)])
price_pred[j] <- result$forecast$result[1, 1]
r_pred[j] <- result$forecast$result[1, 2]
}
onestock <- data.frame(date = date, price_pred = price_pred, r_pred = r_pred)
HS_pred[[i]] <- onestock
}
names(HS_pred) <- names(HuShen300)
source("E://work//r-work//20170615-HuShen300StocksPre//function.R")
load("E:/work/r-work/stocksdata/HuShen300.RData")
X <- c("open", "high", "low", "close", "volume", "MACD_DIF", "MACD_DEA")
HS_pred <- c()
for(i in 1:length(HuShen300)){
mydata <- HuShen300[[i]]
date <- c()
price_pred <- c()
r_pred <- c()
for(j in 1:50){
mydata <- mydata[-c((nrow(mydata)-(50-j)):nrow(mydata)), ]
result <- FittingEverydayModel_new(mydata = mydata, Y = "high", X = X, alphaType = 1, day = 20, daystart = nrow(mydata)-2000)
date[j] <- as.character(mydata$Date[nrow(mydata)])
price_pred[j] <- result$forecast$result[1, 1]
r_pred[j] <- result$forecast$result[1, 2]
}
onestock <- data.frame(date = date, price_pred = price_pred, r_pred = r_pred)
HS_pred[[i]] <- onestock
}
names(HS_pred) <- names(HuShen300)
load("E:/work/r-work/stocksdata/HuShen300.RData")
X <- c("open", "high", "low", "close", "volume", "MACD_DIF", "MACD_DEA")
mydata <- HuShen300$`000008`
source("E://work//r-work//20170615-HuShen300StocksPre//function.R")
result <- FittingEverydayModel_new(mydata = mydata, Y = "high", X = X, alphaType = 1, day = 20, daystart = 1500)
source("E://work//r-work//20170615-HuShen300StocksPre//function.R")
load("E:/work/r-work/stocksdata/HuShen300.RData")
X <- c("open", "high", "low", "close", "volume", "MACD_DIF", "MACD_DEA")
HS_pred <- c()
for(i in 1:length(HuShen300)){
mydata <- HuShen300[[i]]
date <- c()
price_pred <- c()
r_pred <- c()
for(j in 1:50){
mydata <- mydata[-c((nrow(mydata)-(50-j)):nrow(mydata)), ]
result <- FittingEverydayModel_new(mydata = mydata, Y = "high", X = X, alphaType = 1, day = 20, daystart = 50)
date[j] <- as.character(mydata$Date[nrow(mydata)])
price_pred[j] <- result$forecast$result[1, 1]
r_pred[j] <- result$forecast$result[1, 2]
}
onestock <- data.frame(date = date, price_pred = price_pred, r_pred = r_pred)
HS_pred[[i]] <- onestock
}
source("E://work//r-work//20170615-HuShen300StocksPre//function.R")
load("E:/work/r-work/stocksdata/HuShen300.RData")
X <- c("open", "high", "low", "close", "volume", "MACD_DIF", "MACD_DEA")
HuShen300 <- HuShen300[1:30]
HS_pred <- c()
for(i in 1:length(HuShen300)){
mydata <- HuShen300[[i]]
date <- c()
price_pred <- c()
r_pred <- c()
for(j in 1:50){
mydata <- mydata[-c((nrow(mydata)-(50-j)):nrow(mydata)), ]
result <- FittingEverydayModel_new(mydata = mydata, Y = "high", X = X, alphaType = 1, day = 20, daystart = 50)
date[j] <- as.character(mydata$Date[nrow(mydata)])
price_pred[j] <- result$forecast$result[1, 1]
r_pred[j] <- result$forecast$result[1, 2]
}
onestock <- data.frame(date = date, price_pred = price_pred, r_pred = r_pred)
HS_pred[[i]] <- onestock
}
#example
#Generate fake tree data set with 100 observations for 100 species
tree.df <- data.frame(species = rep(c(1:100), each = 100), girth = runif(10000, 7, 40))
tree.df$volume <- tree.df$species/10 + 5*tree.df$girth + rnorm(1000, 0, 3)
#Extract species IDs to iterate over
species <- unique(tree.df$species)
#Run foreach loop and store results in fits object
fits <- foreach(i = species, .combine = rbind) %dopar% {
sp <- subset(tree.df, subset = species == i)
fit <- lm(volum ~ girth, data = sp)
return(c(i, fit$coefficients))
}
head(fits)
setwd("E:/nutstore/R-work/learn/package/about Parallel Computing")
library(foreach)
fits <- foreach(i = species, .combine = rbind) %dopar% {
sp <- subset(tree.df, subset = species == i)
fit <- lm(volum ~ girth, data = sp)
return(c(i, fit$coefficients))
}
library(foreach)
fits <- foreach(i = species, .combine = rbind) %dopar% {
sp <- subset(tree.df, subset = species == i)
fit <- lm(volume ~ girth, data = sp)
return(c(i, fit$coefficients))
}
head(fits)
attributes(fullfits[[1]])
#What if we want all of the info from the lm object? Change .combine
fullfits <- foreach(i = species) %dopar% {
sp <- subset(tree.df, subset = species == i)
fit <- lm(volume ~ girth, data = sp)
return(fit)
}
attributes(fullfits[[1]])
library(foreach)
source("E://work//r-work//20170615-HuShen300StocksPre//function.R")
library(foreach)
load("E:/work/r-work/stocksdata/HuShen300.RData")
source("E://work//r-work//20170615-HuShen300StocksPre//function.R")
library(foreach)
load("E:/work/r-work/stocksdata/HuShen300.RData")
X <- c("open", "high", "low", "close", "volume", "MACD_DIF", "MACD_DEA")
HuShen300 <- HuShen300[1:3]
HS_pred <- c()
for(i in 1:length(HuShen300)){
mydata <- HuShen300[[i]]
date <- c()
price_pred <- c()
r_pred <- c()
onestock <- foreach(j = c(1:30), .combine = rbind) %dopar%{
mydata <- mydata[-c((nrow(mydata)-(30-j)):nrow(mydata)), ]
result <- FittingEverydayModel_new(mydata = mydata, Y = "high", X = X, alphaType = 1, day = 20, daystart = 1000)
date <- as.character(mydata$Date[nrow(mydata)])
price_pred <- result$forecast$result[1, 1]
r_pred <- result$forecast$result[1, 2]
return(c(date, price_pred, r_pred))
}
HS_pred[[i]] <- onestock
}
source("E://work//r-work//20170615-HuShen300StocksPre//function.R")
library(doParallel)
library(foreach)
cl <- makeCluster(3)
registerDoParallel(cl)
load("E:/work/r-work/stocksdata/HuShen300.RData")
X <- c("open", "high", "low", "close", "volume", "MACD_DIF", "MACD_DEA")
HuShen300 <- HuShen300[1:3]
HS_pred <- c()
for(i in 1:length(HuShen300)){
mydata <- HuShen300[[i]]
date <- c()
price_pred <- c()
r_pred <- c()
onestock <- foreach(j = c(1:30), .combine = rbind) %dopar%{
mydata <- mydata[-c((nrow(mydata)-(30-j)):nrow(mydata)), ]
result <- FittingEverydayModel_new(mydata = mydata, Y = "high", X = X, alphaType = 1, day = 20, daystart = 1000)
date <- as.character(mydata$Date[nrow(mydata)])
price_pred <- result$forecast$result[1, 1]
r_pred <- result$forecast$result[1, 2]
return(c(date, price_pred, r_pred))
}
HS_pred[[i]] <- onestock
}

load("E:/r-work/20161214-1-million/tables/20161216-1-resultframe.RData")
length(which(resultframe$high_i > 3))/length(resultframe$high_i)
length(which(resultframe$high_i > 5))/length(resultframe$high_i)
length(which(resultframe$close_i > 3))/length(resultframe$close_i)
length(which(resultframe$close_i > 5))/length(resultframe$close_i)
load("E:/work/20161214-1-AllSharesData/all_shares_data.RData")
select <- function(mydata){
names(mydata) <- tolower(names(mydata))
mydata$date <- as.Date(mydata$date, "%Y-%m-%d")
mydata <- mydata[order(mydata$date), ]
if(length(which(mydata$volume == 0)) != 0){
mydata <- mydata[-which(mydata$volume == 0)]
}
a <- mydata$close[-1]   #第2行到最后一行,第二天的收盘价
b <- mydata$close[-length(mydata$close)]  #第1行到倒数第2行,第一天的收盘价
c <- a/b   #后一天收盘价的收益率,c的第一个数相当于mydata第二天的收盘价收益率
d <- which(c > 1.098) + 1   #相当于mydata中,收盘价收益率大于1.098的行,相当于T-2涨停的行数
e <- d + 1   #mydata中,T-1涨停的行数
f <- intersect(d, e)   #mydata中,连续两天涨停,T-1的行数
if(length(f) == 0){
f <- c(1)
}
if(f[length(f)] > 60){
g <- f[which(f > 60)]   #mydata中,可以算出MA60的T-1行数
ma5 <- numeric()
ma10 <- numeric()
ma20 <- numeric()
ma30 <- numeric()
ma45 <- numeric()
ma60 <- numeric()
for(i in 1:length(g)){
ma5[i] <- mean(mydata$close[(g[i]-4):g[i]])
ma10[i] <- mean(mydata$close[(g[i]-9):g[i]])
ma20[i] <- mean(mydata$close[(g[i]-19):g[i]])
ma30[i] <- mean(mydata$close[(g[i]-29):g[i]])
ma45[i] <- mean(mydata$close[(g[i]-44):g[i]])
ma60[i] <- mean(mydata$close[(g[i]-59):g[i]])
}
h <- (ma5>ma10) + (ma10>ma20) + (ma20>ma30) + (ma30>ma45) + (ma45>ma60)
j <- which(h == 5)   #h中,满足MA条件的行数
k <- f[j]   #mydata中,经过涨停和MA条件后筛选出来的T-1的行数
}else{
k <- numeric()
}
if(length(k) != 0){
l <- k + 1   #mydata中,经过涨停和MA条件筛选后的T的行数
m <- mydata$low[l] < mydata$open[l]   #最低价小于开盘价
n <- mydata$open[l] != mydata$high[l-1]   #开盘价不是涨停价
o <- 100*(mydata$high[l] - mydata$low[l])/mydata$close[l-1] > 3   #振幅大于3%
p <- mydata$close[l] > mydata$close[l-1]   #上涨
q <- l[which((m+n+o+p) == 4)]   #mydata中,经过涨停、MA和四个条件筛选后得到的T的行数
}else{
q <- numeric()
}
if(length(q) != 0){
t_1_open <- (mydata$open[q+1]/mydata$close[q] - 1)*100
t_1_high <- (mydata$high[q+1]/mydata$close[q] - 1)*100
t_1_low <- (mydata$low[q+1]/mydata$close[q] - 1)*100
t_1_close <- (mydata$close[q+1]/mydata$close[q] - 1)*100
t_1_high_close_avg <- ((mydata$high[q+1] + mydata$close[q+1])/2/mydata$close[q] - 1)/100
t1_high <- t_1_high
t2_high <- (mydata$high[q+2]/mydata$close[q] - 1)*100
t2_high <- apply(data.frame(t1_high, t2_high), MARGIN = 1, max)
mydata2 <- data.frame(num = mydata$num[q], date = mydata$date[q], t_2_volume = mydata$volume[q-2], t_1_volume = mydata$volume[q-1], t_volume = mydata$volume[q], t_1_open = t_1_open, t_1_high = t_1_high, t_1_low = t_1_low, t_1_close = t_1_close, t_1_high_close_avg = t_1_high_close_avg, t1_high = t1_high, t2_high = t2_high)
}else{
mydata2 <- data.frame(num = NA, date = NA, t_2_volume = NA, t_1_volume = NA, t_volume = NA, t_1_open = NA, t_1_high = NA, t_1_low = NA, t_1_close = NA, t_1_high_close_avg = NA, t1_high = NA, t2_high = NA)
}
mydata2 <- na.omit(mydata2)
return(mydata2)
}
select_list <- lapply(all_shares_data, select)
iver <- Reduce(function(x, y) rbind(x, y), select_list)
View(iver)
iver$date <- as.Date(iver$date, "%Y-%m-%d")
data <- Reduce(function(x, y) rbind(x, y), all_shares_data)
mylist <- all_shares_data
rm(mylist)
mydata <- all_shares_data[[1]]
names(mydata) <- tolower(names(mydata))
mydata$date <- as.Date(mydata$date, "%Y-%m-%d")
mydata <- mydata[order(mydata$date), ]
modeldate <- unique(iver$date)
modeldate <- as.Date(modeldate, "%Y-%m-%d")
names(mydata) <- tolower(names(mydata))
mydata$date <- as.Date(mydata$date, "%Y-%m-%d")
mydata <- mydata[order(mydata$date), ]
if(length(which(mydata$volume == 0)) != 0){
mydata <- mydata[-which(mydata$volume == 0)]
}
a <- which(mydata$date == modeldate)
a <- which(mydata$date = modeldate)
a
for(i in 1:length(modeldate)){
t[i] <- which(mydata$date == modeldate[i])
}
modeldate <- unique(iver$date)
modeldate <- as.Date(modeldate, "%Y-%m-%d")
names(mydata) <- tolower(names(mydata))
if(length(which(mydata$volume == 0)) != 0){
mydata <- mydata[-which(mydata$volume == 0)]
}
mydata$date <- as.Date(mydata$date, "%Y-%m-%d")
mydata <- mydata[order(mydata$date), ]
for(i in 1:length(modeldate)){
t[i] <- which(mydata$date == modeldate[i])
}
for(i in 1:length(modeldate)){
if(modeldate[i] %in% mydata$date){
t[i] <- which(mydata$date == modeldate[i])
}else{
t[i] <- NA
}
}
t <- numeric()
for(i in 1:length(modeldate)){
if(modeldate[i] %in% mydata$date){
t[i] <- which(mydata$date == modeldate[i])
}else{
t[i] <- NA
}
}
t_close <- mydata$close[t]
t_1_high <- mydata$high[t+1]
t_2_high <- mydata$high[t+2]
market_t_2_high <- (t_2_high/t_close - 1)*100
market_t_2_high <- apply(data.frame(market_t_1_high, market_t_2_high), MARGIN = 1, max)
market_t_1_high <- (t_1_high/t_close - 1)*100
market_t_2_high <- (t_2_high/t_close - 1)*100
market_t_2_high <- apply(data.frame(market_t_1_high, market_t_2_high), MARGIN = 1, max)
market <- function(mydata){
modeldate <- unique(iver$date)
modeldate <- as.Date(modeldate, "%Y-%m-%d")
names(mydata) <- tolower(names(mydata))
if(length(which(mydata$volume == 0)) != 0){
mydata <- mydata[-which(mydata$volume == 0)]
}
mydata$date <- as.Date(mydata$date, "%Y-%m-%d")
mydata <- mydata[order(mydata$date), ]
t <- numeric()
for(i in 1:length(modeldate)){
if(modeldate[i] %in% mydata$date){
t[i] <- which(mydata$date == modeldate[i])
}else{
t[i] <- NA
}
}
t_close <- mydata$close[t]
t_1_high <- mydata$high[t+1]
t_2_high <- mydata$high[t+2]
market_t_1_high <- (t_1_high/t_close - 1)*100
market_t_2_high <- (t_2_high/t_close - 1)*100
market_t_2_high <- apply(data.frame(market_t_1_high, market_t_2_high), MARGIN = 1, max)
market <- data.frame(date = modeldate, market_t_1_high = market_t_1_high, market_t_2_high = market_t_2_high)
}
market <- function(mydata){
modeldate <- unique(iver$date)
modeldate <- as.Date(modeldate, "%Y-%m-%d")
names(mydata) <- tolower(names(mydata))
if(length(which(mydata$volume == 0)) != 0){
mydata <- mydata[-which(mydata$volume == 0)]
}
mydata$date <- as.Date(mydata$date, "%Y-%m-%d")
mydata <- mydata[order(mydata$date), ]
t <- numeric()
for(i in 1:length(modeldate)){
if(modeldate[i] %in% mydata$date){
t[i] <- which(mydata$date == modeldate[i])
}else{
t[i] <- NA
}
}
t_close <- mydata$close[t]
t_1_high <- mydata$high[t+1]
t_2_high <- mydata$high[t+2]
market_t_1_high <- (t_1_high/t_close - 1)*100
market_t_2_high <- (t_2_high/t_close - 1)*100
market_t_2_high <- apply(data.frame(market_t_1_high, market_t_2_high), MARGIN = 1, max)
market <- data.frame(date = modeldate, market_t_1_high = market_t_1_high, market_t_2_high = market_t_2_high)
return(market)
}
date <- market(mydata)
View(date)
market <- function(mydata){
modeldate <- unique(iver$date)
modeldate <- as.Date(modeldate, "%Y-%m-%d")
names(mydata) <- tolower(names(mydata))
if(length(which(mydata$volume == 0)) != 0){
mydata <- mydata[-which(mydata$volume == 0)]
}
mydata$date <- as.Date(mydata$date, "%Y-%m-%d")
mydata <- mydata[order(mydata$date), ]
t <- numeric()
for(i in 1:length(modeldate)){
if(modeldate[i] %in% mydata$date){
t[i] <- which(mydata$date == modeldate[i])
}else{
t[i] <- NA
}
}
t_close <- mydata$close[t]
t_1_high <- mydata$high[t+1]
t_2_high <- mydata$high[t+2]
market_t_1_high <- (t_1_high/t_close - 1)*100
market_t_2_high <- (t_2_high/t_close - 1)*100
market_t_2_high <- apply(data.frame(market_t_1_high, market_t_2_high), MARGIN = 1, max)
market <- data.frame(date = modeldate, market_t_1_high = market_t_1_high, market_t_2_high = market_t_2_high)
market <- na.omit(market)
return(market)
}
load("E:/nutstore/王鹤论文/r/0最终数据/mydata.RData")
write.csv(mydata, "mydata.csv", sep = ",", row.names = FALSE)
write.csv(mydata, "mydata.csv", row.names = FALSE)
data(tempdub)
library(TSA)
data("tempdub")
month. <- season(tempdub)
model2 <- lm(tempdub ~ month. - 1)    #去掉截距项
summary(model2)
model3 <- lm(tempdub ~ month.)   #一月将被移除
summary(model3)
model2$coefficients
library(ggplot2)
ggplot(data = model2$coefficients) + geom_point(y = model2$coefficients)
a <- data.frame(model2$coefficients)
a$month <- month.
a$month <- month.[1:12]
View(a)
ggplot(data = a, aes(x = month, y = model.coefficients)) + geom_point()
ggplot(data = a, aes(x = month, y = model2.coefficients)) + geom_point()
har. = harmonic(tempdub, 1)
View(har.)
har. = harmonic(tempdub, 1)   #求cos(2*pi*t)&sin(2*pi*t)
model4 <- lm(tempdub ~ har.)
summary(model4)
fitted(model4)
tempdub
temp <- c(tempdub)
date("1999-1", "%Y-%m")
a <- rep(c(1964:1976), each = 12)
b <- rep(c(1:12), times = 13)
date <- paste(a, b, sep = "-")
date <- as.Date(date, "%Y-%m")
date <- paste(a, b, sep = "-")
b <- rep(c(01:12), times = 13)
b <- season(tempdub)
date <- paste(a, b, sep = "-")
date <- as.Date(date, "%Y-%m")
date <- as.Date(date, "%Y-%B")
date <- paste(a, b, sep = "-")
date <- as.Date(date, "%Y-%B")
date <- paste(a, b, sep = "-")
date <- as.Date(date, "%Y-%B")
date
date <- paste(a, b, sep = "/")
tempdub_df <- data.frame(temp = temp, fitted = fitted)
temp <- c(tempdub); fitted <- fitted(model4)
tempdub_df <- data.frame(temp = temp, fitted = fitted)
ggplot(data = tempdub_df) + geom_point(aes(x = temp)) + geom_line(aes(x = fitted))
ggplot(data = tempdub_df) + geom_point(aes(y = temp)) + geom_line(aes(y = fitted))
tempdub_df <- data.frame(temp = temp, fitted = fitted, time = c(1:156))
ggplot(data = tempdub_df) + geom_point(aes(y = temp)) + geom_line(aes(y = fitted))
tempdub_df <- data.frame(temp = temp, fitted = fitted, time = c(1:144))
ggplot(data = tempdub_df) + geom_point(aes(y = temp)) + geom_line(aes(y = fitted))
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp)) + geom_line(aes(y = fitted))
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp)) + geom_line(aes(y = fitted), col = 'blue')
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp)) + geom_line(aes(y = fitted), col = 'darkorange1')
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp), col = 'darkorchid1') + geom_line(aes(y = fitted), col = 'darkorange1')
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp), col = 'darkorchid1') + geom_line(aes(y = fitted), col = 'darkorange1') + scale_x_continuous(breaks = sep(from = 1, to = 12, sep = 12))
seq(from = 1, to = 12, sep = 12)
seq(from = 1, to = 12, by = 12)
seq(from = 1, to = 133, by = 12)
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp), col = 'darkorchid1') + geom_line(aes(y = fitted), col = 'darkorange1') + scale_x_continuous(breaks = seq(from = 1, to = 133, by = 12), labels = c(1964:1976))
1964:1976
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp), col = 'darkorchid1') + geom_line(aes(y = fitted), col = 'darkorange1') + scale_x_continuous(breaks = seq(from = 1, to = 145, by = 12), labels = c(1964:1975))
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp), col = 'darkorchid1') + geom_line(aes(y = fitted), col = 'darkorange1') + scale_x_continuous(breaks = seq(from = 1, to = 145, by = 12), labels = c(1964:1976))
temp <- c(tempdub); fitted <- fitted(model4)
tempdub_df <- data.frame(temp = temp, fitted = fitted, time = c(1:144))
ggplot(data = tempdub_df, aes(x = time)) + geom_point(aes(y = temp), col = 'darkorchid1') + geom_line(aes(y = fitted), col = 'darkorange1') + scale_x_continuous(breaks = seq(from = 1, to = 145, by = 12), labels = c(1964:1976))
setwd("E:/nutstore/R-work/learn/Time Series Analysis with Applications  in R")
library(TSA)
data(ma2.s);plot(ma2.s, ylab = expression(Y[t]), type = 'o')
plot(y = ma2.s, x = zlag(ma2.s), ylab = expression(Y[t]), xlab = expression(Y[t-1]), type = 'p')
plot(y = ma2.s, x = zlag(ma2.s, 2), ylab = expression(Y[t]), xlab = expression(Y[t-2]), type = 'p')
plot(y = ma2.s, x = zlag(ma2.s, 3), ylab = expression(Y[t]), xlab = expression(Y[t-3]), type = 'p')

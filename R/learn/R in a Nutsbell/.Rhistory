data("Affairs", package = "AER")
summary(Affairs)
head(Affairs)
table(Affairs$affairs)
Affairs$ynaffair[Affairs$affairs == 0] <- 0
Affairs$ynaffair[Affairs$affairs >0] <- 1
head(Affairs)
Affairs$ynaffair <- factor(Affairs$ynaffair, levels = c(0, 1), labels = c("No", "Yes"))
table(Affairs$ynaffair)
fit.full <- glm(ynaffair <- gender + age + yearsmarried + children + religiousness + education + occupation + rating, data = Affairs, family = binomial())
fit.full <- glm(ynaffair ~ gender + age + yearsmarried + children + religiousness + education + occupation + rating, data = Affairs, family = binomial())
summary(fit.full)
fit.reduced <- glm(ynaffair ~ age + yearsmarried + religiousness + rating, data = Affairs, family = binomial())
summary(fit.reduced)
anova(fit.full, fit.reduced, test = "Chisq")
coef(fit.reduced)
confint(fit.reduced)
exp(confint(fit.reduced))
testdata <- data.frame(rating = c(1, 2, 3, 4, 5), age = mean(Affairs$age), yearsmarried = mean(Affairs$yearsmarried), religiousness = mean(Affairs$religiousness))
testdata
testdata$prob <- predict(fit.reduced, newdata = testdata, type = "response")
testdata
testdata <- data.frame(rating = mean(Affairs$rating), age = seq(17, 57, 10), yearsmarried = mean(Affairs$yearsmarried), religiousness = mean(Affairs$religiousness))
testdata
testdata$prob <- predict(fit.reduced, newdata = testdata, type = "response")
testdata
setwd("F:/nutstore/R-work/R in a Nutsbell")
install.packages("nutshell")
library(nutshell)
data("field.goals")
head(field.goals)
str(field.goals)
summary(field.goals)
hist(field.goals$yards)
hist(field.goals$yards, breaks = 35)
abline(field.goals$yards)
table(field.goals$play.type)
stripchart(field.goals[field.goals$play.type == "FG blocked", ]$yards, pch = 19, method = "jitter")
data("cars")
str(cars)
plot(cars, xlab = "Speed(mph)", ylab = "Stopping distance(ft)", las = 1, xlim = c(0, 25))
plot(speed ~ dist, data = cars)
plot(speed ~ dist, data = cars, las = 1)
plot(speed ~ dist, data = cars)
plot(speed ~ dist, data = cars, las = 1)
abline(speed ~ dist, data = cars)
line(abline(speed ~ dist), data = cars)
abline(lm(speed ~ dist), col = "red")
abline(lm(speed ~ dist, data = cars), col = "red")
library(lattice)
data("consumption")
head(consumption)
str(consumption)
dotplot(Amount ~ Year | Food, consumption)
dotplot(Amount ~ Year | Food, data = consumption, aspect = "xy", scales = list(relation = "sliced", cex = .4))
getOption("defaultPackages")
library(lattice)
(.packages())   #查看当前已加载的所有R包
(.packages(all.available = TRUE))   #查看所有已安装的R包的清单
getOption("defaultPackages")   #得到默认加载的R包的清单
(.packages())   #查看当前已加载的所有R包
(.packages(all.available = TRUE))   #查看所有已安装的R包的清单（同library()）
